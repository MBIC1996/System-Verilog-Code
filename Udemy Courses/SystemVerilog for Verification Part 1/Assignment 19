// For the Generator code mentioned in the Instruction tab, expected values for variable a ranges from 0 to 8, variable b ranges from 0 to 5. Also, add logic to store the number of times randomization failed. Print values of variables during each iteration and error count after generating 20 random values for a and b. Add Constraint Code and Testbench top code to  the Design.

`timescale 1 ns / 1 ps;



class generator;



rand bit [4:0] a;

rand bit [5:0] b;



constraint data

{

    (a inside {[0:8]});

    (b inside {[0:5]});

};





endclass





module tb;



generator g;

int i = 0;

int rand_fail_count = 0;

initial begin



    for (i = 0; i < 20;i++) begin

        g = new();



        g.randomize();

        $display("a = %0d b = %0d randomization has failed %0d times",g.a,g.b,rand_fail_count);

       

        #20;



        if(!g.randomize()) begin

            $display("randomization failed at time %0t", $time);

            rand_fail_count <= rand_fail_count + 1;

        end

    end





end







endmodule

